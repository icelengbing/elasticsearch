[[indices-create-index]]
== 创建索引

创建索引 API 用于在 ElasticSearch 中手动创建索引。ElasticSearch 中的所有文档都存储在索引中。

最基本的命令如下：

[source,js]
--------------------------------------------------
PUT twitter
--------------------------------------------------
// CONSOLE

这将创建一个名为 `twitter` 的索引，其中包含所有默认设置。

[NOTE]
.索引名称限制
======================================================
对于索引的命名有一些限制。完整的限制列表如下：

- 只能使用小写字母
- 不能包含 `\`、 `/`、 `*`、 `?`、 `"`、 `<`、 `>`、 `|`、 ` ` （空格）、 `,`、 `#`
- 7.0之前的索引可以包含冒号（`:`），但已弃用，7.0以后的版本中不支持
- 不能以 `-`、 `_`、 `+`这些字符开头
- 不能是 `.` 或者 `..`
- 不能长于255字节（注意是字节，因此多字节字符将更快计数到255限制）

======================================================

[float]
[[create-index-settings]]
=== 索引设置

创建的每个索引都有与之关联的特定设置，在正文中定义：

[source,js]
--------------------------------------------------
PUT twitter
{
    "settings" : {
        "index" : {
            "number_of_shards" : 3, <1>
            "number_of_replicas" : 2 <2>
        }
    }
}
--------------------------------------------------
// CONSOLE
<1> 默认 `number_of_shards` 值为5
<2> 默认 `number_of_replicas` 值为1 （
即每个主分片一个副本）

或者简化设置如下

[source,js]
--------------------------------------------------
PUT twitter
{
    "settings" : {
        "number_of_shards" : 3,
        "number_of_replicas" : 2
    }
}
--------------------------------------------------
// CONSOLE

[NOTE]
您不必在 `settings` 中明确指定 `index` 。

关于在创建索引时，针对所有不同索引级别可以设置的更多详细信息，请参阅 <<index-modules,index modules>> 部分。


[float]
[[mappings]]
=== 映射

创建索引 API 允许提供一个类型映射：

[source,js]
--------------------------------------------------
PUT test
{
    "settings" : {
        "number_of_shards" : 1
    },
    "mappings" : {
        "_doc" : {
            "properties" : {
                "field1" : { "type" : "text" }
            }
        }
    }
}
--------------------------------------------------
// CONSOLE

[float]
[[create-index-aliases]]
=== 别名

创建索 API 还允许提供一组别名 <<indices-aliases,aliases>>：

[source,js]
--------------------------------------------------
PUT test
{
    "aliases" : {
        "alias_1" : {},
        "alias_2" : {
            "filter" : {
                "term" : {"user" : "kimchy" }
            },
            "routing" : "kimchy"
        }
    }
}
--------------------------------------------------
// CONSOLE

[float]
[[create-index-wait-for-active-shards]]
=== 等待活动分片

默认情况下，索引创建仅在每个分片的主拷贝已启动或请求超时时才返回对客户端的响应。该响应将表明具体发生了什么：

[source,js]
--------------------------------------------------
{
    "acknowledged": true,
    "shards_acknowledged": true,
    "index": "test"
}
--------------------------------------------------
// TESTRESPONSE

`acknowledged` 表示索引是否已在群集中成功创建，
`shards_acknowledged` 表示在超时之前，是否为索引中的每个分片启动了必需数量的分片拷贝。注意，即使索引创建成功，`acknowledged` 或 `shards_acknowledged` 仍然可能为 `false`。这些值仅表示操作是否在超时之前完成。如果 `acknowledged` 为  `false`，可能表明在为新建索引更新集群状态之前超时，但很可能其很快就会刷新。如果 `shards_acknowledged` 为 `false`，则可能表明在启动所需数量的分片之前超时（默认情况下只要有主分片），即使集群状态已成功更新已能反映新建索引（即  `acknowledged=true`）。

我们可以通过索引设置 `index.write.wait_for_active_shards` 更改仅等待主分片开始的默认值（注意，更改此设置也会影响所有后续写操作的  `wait_for_active_shards` 值）：

[source,js]
--------------------------------------------------
PUT test
{
    "settings": {
        "index.write.wait_for_active_shards": "2"
    }
}
--------------------------------------------------
// CONSOLE
// TEST[skip:requires two nodes]

或者通过请求参数 `wait_for_active_shards` 来设定:

[source,js]
--------------------------------------------------
PUT test?wait_for_active_shards=2
--------------------------------------------------
// CONSOLE
// TEST[skip:requires two nodes]

有关 `wait_for_active_shards` 的详细说明和其可能的取值点击 <<index-wait-for-active-shards,这里>> 查询。

